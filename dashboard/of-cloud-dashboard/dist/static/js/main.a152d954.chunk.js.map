{"version":3,"sources":["components/NavBar/NavBar.jsx","components/ReplicasProgress/ReplicasProgress.jsx","components/FunctionTableItem/FunctionTableItem.jsx","components/FunctionTable/FunctionTable.jsx","api/functionsApi.js","pages/FunctionsOverviewPage.jsx","components/FunctionInvocation/index.jsx","components/FunctionOverviewPanel/FunctionOverviewPanel.jsx","components/FunctionDetailSummary/FunctionDetailSummary.jsx","components/GetBadgeModal/GetBadgeModal.jsx","components/ModalRunOnMyOF/ModalRunOnMyOF.jsx","pages/FunctionDetailPage.jsx","pages/FunctionLogPage.jsx","pages/NotFoundPage.jsx","components/Breadcrumbs/Breadcrumbs.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["NavBarWithRouter","state","isActive","toggle","bind","this","setState","window","SIGNED_IN","currentPath","path","label","additionalClassName","icon","onClick","to","className","filter","item","join","active","tag","NavLinkRouter","exact","user","pathname","props","history","location","match","matchPath","strict","params","dark","color","expand","href","alt","src","isOpen","navbar","createNavLink","faGithub","isLoggedIn","faSignOutAlt","forceUpdate","Component","NavBar","withRouter","ReplicasProgress","fn","replicas","maxReplicas","upperReplicas","length","parseInt","percentage","Math","floor","status","value","FunctionTableItem","shortName","gitRepo","shortSha","gitPrivate","endpoint","sinceDuration","invocationCount","repoUrl","gitRepoURL","gitBranch","genRepoUrl","logPath","gitOwner","gitSha","genLogPath","fnDetailPath","genFnDetailPath","outline","size","e","stopPropagation","faUserSecret","Link","FunctionTable","isLoading","fns","tbody","colSpan","style","textAlign","spin","clickHandler","map","key","renderBody","push","tableProps","responsive","hover","width","id","functionsApi","selectedRepo","prettyDomain","PRETTY_URL","queryPrettyUrl","QUERY_PRETTY_URL","baseURL","PUBLIC_URL","apiBaseUrl","BASE_HREF","cachedFunctions","userName","data","toLowerCase","sort","a","b","labels","userPrefixRegex","RegExp","since","Date","moment","fromNow","name","replace","substr","annotations","isPrivate","image","gitDeployTime","minReplicas","url","axios","get","then","res","parseFunctionResponse","reduce","cache","fnShortname","Promise","resolve","reject","cachedFn","fetchFunctions","undefined","Error","functionName","timePeriod","result","console","error","commitSHA","repoPath","FunctionsOverviewPage","OPTIONS","FunctionInvocation","selected","navLinkClickHandle","option","changeFunctionInvocationTimePeriod","functionInvocationData","success","failure","navLinks","Object","keys","total","successPercent","failurePercent","multi","bar","React","FunctionOverviewPanel","children","headerText","headerIcon","button","bodyClassName","getOppositeSize","MetaList","list","sizes","currentSizes","xs","sm","md","lg","xl","renderValue","noGutters","defaultProps","renderContainerImage","parts","split","target","FunctionDetailSummary","handleShowBadgeModal","handleShowRunOnMyOFModal","log","repo","deployMeta","title","faCloudDownloadAlt","gitMeta","deployIcon","gitIcon","invocationsIcon","deployButton","gitButton","faAward","badgeImage","badgeMd","GetBadgeModal","valid","handleCopyClick","closeModal","preventDefault","input","select","document","execCommand","setTimeout","readOnly","innerRef","node","type","addonType","faCopy","tooltip","ModalRunOnMyOF","code","bsSize","rows","FunctionDetailPage","fetchFunctionInvocation","queryString","parse","search","handleCloseBadgeModal","handleCloseRunOnMyOFModal","showBadgeModal","showRunOnMyOFModal","fetchFunction","panelBody","onEditorLoad","editor","scrollToLine","getSession","getLength","navigateLineEnd","FunctionLogPage","fetchFunctionLog","editorOptions","height","mode","theme","onLoad","wrapEnabled","showPrintMargin","editorProps","$blockScrolling","NotFoundPage","BreadcrumbsWithRouter","pathToParts","slice","acc","p","i","previousPath","q","qs","unlisten","listen","links","itemProps","itemContent","NavLink","listClassName","Breadcrumbs","Footer","App","basename","BrowserRouter","Switch","Route","component","library","add","faFolderOpen","faLink","faSpinner","faInfoCircle","faCodeBranch","faBolt","faCubes","faPlusSquare","ReactDOM","render","getElementById"],"mappings":"waAeMA,E,2MACJC,MAAQ,CACNC,UAAU,G,EASZC,OAAS,EAAKA,OAAOC,KAAZ,gB,wEALPC,KAAKC,SAAS,CACZJ,UAAWG,KAAKJ,MAAMC,a,mCAOxB,MAA4B,SAArBK,OAAOC,Y,oCAGFC,EAAaC,EAAMC,EAAOC,GAAuD,IAAlCC,EAAiC,uDAA1B,KAAMC,EAAoB,uDAAV,aAClF,IAAKJ,EACH,OAAO,KAGT,IAAMK,EAAE,WAAOL,GAETM,EAAY,CAChB,OACA,OACA,UACAJ,GACAK,QAAO,SAAAC,GAAI,OAAIA,KAAMC,KAAK,KAE5B,OACE,kBAAC,IAAD,CAASC,OAAQX,IAAgBM,GAC/B,kBAAC,IAAD,CAASC,UAAWA,EAAWK,IAAKC,IAAeP,GAAIA,EAAIQ,OAAK,EAACT,QAASA,GACtED,EACAF,M,+BAMA,IAMJa,EALIC,EAAapB,KAAKqB,MAAMC,QAAQC,SAAhCH,SACFI,EAAQC,YAAUL,EAAU,CAChCf,KAAM,SACNqB,QAAQ,IAOV,OAJIF,GAASA,EAAMG,SACjBR,EAAOK,EAAMG,OAAOR,MAIpB,kBAAC,IAAD,CACES,MAAI,EACJC,MAAM,WACNC,OAAO,KACPnB,UAAW,CACT,gCACA,yBACA,iBACA,MACA,mBACAG,KAAK,MAEP,kBAAC,IAAD,CAAaiB,KAAK,IAAIpB,UAAU,qDAC9B,yBACEqB,IAAI,WACJC,IAAI,+CAGR,uBACEF,KAAK,iDACLpB,UAAU,yBAFZ,kBAMA,kBAAC,IAAD,CAAeA,UAAU,OAAOF,QAAST,KAAKF,SAC9C,kBAAC,IAAD,CAAUoC,OAAQlC,KAAKJ,MAAMC,SAAUsC,QAAM,GAC3C,kBAAC,IAAD,CAAKA,QAAM,GACPnC,KAAKoC,cAAchB,EAAUD,EAAM,QACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACER,UAAU,oBACVoB,KAAK,8CAEL,kBAAC,IAAD,CAAiBvB,KAAM6B,IAAU1B,UAAU,SAJ7C,YASJ,kBAAC,IAAD,CAAKwB,QAAM,EAACxB,UAAU,WAClBX,KAAKsC,cAAgBtC,KAAKoC,cACxBhB,EACA,SACA,SACA,GACA,kBAAC,IAAD,CAAiBZ,KAAM+B,IAAc5B,UAAU,SAC/CX,KAAKwC,oB,GAlGUC,aA2GzBC,EAASC,YAAWhD,G,QCvHpBiD,EAAmB,SAAC,GAAY,IAAVC,EAAS,EAATA,GAClBC,EAA0BD,EAA1BC,SAAUC,EAAgBF,EAAhBE,YAEZC,EAAgBD,GAAeA,EAAYE,QAAUC,SAASH,EAAa,IAAMA,EAAc,GAC/FI,EAAaC,KAAKC,MAAOP,EAAWE,EAAiB,KAEvDM,EAAS,KAUb,OAPEA,EADEH,EAAa,GACN,UACA,IAAMA,GAAcA,EAAa,GACjC,UAEA,SAIT,yBAAKxC,UAAU,6BACb,kBAAC,IAAD,CAAUkB,MAAOyB,EAAQC,MAAOJ,EAAYxC,UAAU,gBACtD,yBAAKA,UAAU,kCACXmC,EADJ,IACiBE,KCDjBQ,EAAoB,SAAC,GAA2B,IAAzB/C,EAAwB,EAAxBA,QAASoC,EAAe,EAAfA,GAAI1B,EAAW,EAAXA,KAEtCsC,EAOEZ,EAPFY,UACAC,EAMEb,EANFa,QACAC,EAKEd,EALFc,SACAC,EAIEf,EAJFe,WACAC,EAGEhB,EAHFgB,SACAC,EAEEjB,EAFFiB,cACAC,EACElB,EADFkB,gBAGIC,EAlBW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAChC,MAAiB,KAAdA,EACK,GAAN,OAAUD,EAAV,mBAEI,GAAN,OAAUA,EAAV,oBAAgCC,GAchBC,CAAWtB,GACrBuB,EA3BW,SAAC,EAA0CjD,GAA3C,IAAGsC,EAAH,EAAGA,UAAWY,EAAd,EAAcA,SAAUX,EAAxB,EAAwBA,QAASY,EAAjC,EAAiCA,OAAjC,gBACdnD,EADc,YACNsC,EADM,yBACoBY,EADpB,YACgCX,EADhC,sBACqDY,GA0BtDC,CAAW1B,EAAI1B,GACzBqD,EAxBgB,SAAC,EAAkCrD,GAAnC,IAAGsC,EAAH,EAAGA,UAAWY,EAAd,EAAcA,SAAUX,EAAxB,EAAwBA,QAAxB,iBAClBvC,EADkB,YACVsC,EADU,qBACYY,EADZ,YACwBX,GAuBzBe,CAAgB5B,EAAI1B,GAIzC,OACE,wBAAIV,QAHc,kBAAMA,EAAQ+D,IAGN7D,UAAU,kBAClC,4BAAK8C,GACL,4BACE,kBAAC,IAAD,CACEiB,SAAO,EACPC,KAAK,KACL5C,KAAM8B,EACNpD,QAAS,SAAAmE,GAAC,OAAIA,EAAEC,oBAEhB,kBAAC,IAAD,CAAiBrE,KAAK,WAG1B,4BACE,yBAAKG,UAAU,qDACb,uBAAGoB,KAAMiC,EAASvD,QAAS,SAAAmE,GAAC,OAAIA,EAAEC,oBAC9BnB,GAEFE,GAAc,kBAAC,IAAD,CAAiBpD,KAAMsE,QAG3C,4BACInB,GAEJ,4BACIG,GAEJ,4BACIC,GAEJ,4BACE,kBAAC,EAAD,CAAkBlB,GAAIA,KAExB,4BACE,kBAAC,IAAD,CACE6B,SAAO,EACPC,KAAK,KACLjE,GAAI0D,EACJ3D,QAAS,SAAAmE,GAAC,OAAIA,EAAEC,mBAChB7D,IAAK+D,KAEL,kBAAC,IAAD,CAAiBvE,KAAK,oB,MCrDhC,IAAMwE,EAAgBrC,aAAW,YAAwC,IAArCsC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,IAAK/D,EAAoB,EAApBA,KAAMG,EAAc,EAAdA,QAElD6D,EAAQF,EACZ,4BACE,wBAAIG,QAAQ,IAAIC,MAAO,CAAEC,UAAW,WAClC,kBAAC,IAAD,CAAiB9E,KAAK,UAAU+E,MAAI,MArB5C,SAAoBL,EAAK/D,EAAMqE,GAC7B,OAAmB,IAAfN,EAAIjC,OAEJ,4BACE,wDAIGiC,EAAIO,KAAI,SAAC5C,GACd,OACE,kBAAC,EAAD,CAAmB6C,IAAK7C,EAAGc,SAAUd,GAAIA,EAAI1B,KAAMA,EAAMV,QAAS+E,OAetEG,CAAWT,EAAK/D,GARC,SAAAT,GAAE,OAAIY,EAAQsE,KAAKlF,MAWlCmF,EAAa,CACfC,YAAY,EACZnF,UAAW,kBAOb,OAJIuE,GAAOA,EAAIjC,OAAS,IACtB4C,EAAWE,OAAQ,GAInB,kBAAC,IAAUF,EACT,+BACA,4BACE,oCACA,wBAAIR,MAAO,CAAEW,MAAO,UACpB,0CACA,mCACA,wCACA,2CACA,wCACA,+BAGF,2BAAOC,GAAG,SACNd,O,2DCqGGe,EAAe,I,WA9J1B,aAAe,oBACblG,KAAKmG,aAAe,GACpBnG,KAAKoG,aAAelG,OAAOmG,WAC3BrG,KAAKsG,eAA6C,SAA5BpG,OAAOqG,iBAG3BvG,KAAKwG,QAAUtG,OAAOuG,WACtBzG,KAAK0G,WAAL,UAAqBxG,OAAOyG,UAA5B,OAMF3G,KAAK4G,gBAAkB,G,oEAKtBC,GAAW,IAAD,OADXC,EACW,EADXA,KAEM3F,EAAO0F,EAASE,cAEtBD,EAAKE,MAAK,SAACC,EAAGC,GACZ,OACGD,GACAC,GACCD,EAAEE,OAAO,sCAAyCD,EAAEC,OAAO,qCAK7DjE,SAASgE,EAAEC,OAAO,qCAAsC,IACxDjE,SAAS+D,EAAEE,OAAO,qCAAsC,IAJjD,KAQX,IAAMC,EAAkB,IAAIC,OAAJ,WAAelG,EAAf,MAExB,OAAO2F,EAAKrB,KAAI,SAAA5E,GACd,IAOIgD,EAPEyD,EAAQ,IAAIC,KACiD,IAAjErE,SAASrC,EAAKsG,OAAO,qCAAsC,KAEvDrD,EAAgB0D,IAAOF,GAAOG,UAE9BhE,EAAY5C,EAAK6G,KAAKC,QAAQP,EAAiB,IAKnDvD,EADE,EAAKyC,eACI,EAAKF,aACbuB,QAAQ,OAAQxG,GAChBwG,QAAQ,WAAYlE,GAEZ,EAAK+C,QAAU,aAAe3F,EAAK6G,KAGhD,IAAI/D,EAAW9C,EAAKsG,OAAO,8BAEzBxD,EADEA,EACSA,EAASiE,OAAO,EAAG,GAEnB,UAGb,IAjEaC,EAiETC,GAAY,EAShB,OANEjH,EAAKsG,OAAO,mCACsC,MAAlDtG,EAAKsG,OAAO,oCAEZW,GAAY,GAGP,CACLJ,KAAM7G,EAAK6G,KACXK,MAAOlH,EAAKkH,MACZtE,YACAI,WACAF,WACAG,gBACAC,gBAAiBlD,EAAKkD,gBACtBjB,SAAUjC,EAAKiC,SACfY,QAAS7C,EAAKsG,OAAO,+BACrB9C,SAAUxD,EAAKsG,OAAO,gCACtBa,cAAenH,EAAKsG,OAAO,qCAC3BvD,WAAYkE,EACZxD,OAAQzD,EAAKsG,OAAO,8BACpBjD,UAAWrD,EAAKsG,OAAO,iCACvBlD,YAzFW4D,EAyFYhH,EAAKgH,aAAe,GAzFjBA,EAAY,oCAAsC,IA0F5EI,YAAapH,EAAKsG,OAAO,0BACzBpE,YAAalC,EAAKsG,OAAO,gC,qCAKhBhG,GAAO,IAAD,OACb+G,EAAG,UAAMlI,KAAK0G,WAAX,gCAA6CvF,GACtD,OAAOgH,IACJC,IAAIF,GACJG,MAAK,SAAAC,GAAG,OAAI,EAAKC,sBAAsBD,EAAKnH,MAC5CkH,MAAK,SAAAvB,GAKJ,OAJA,EAAKF,gBAAkBE,EAAK0B,QAAO,SAACC,EAAO5F,GAEzC,OADA4F,EAAM,GAAD,OAAItH,EAAJ,YAAY0B,EAAGwB,SAAf,YAA2BxB,EAAGa,QAA9B,YAAyCb,EAAGY,YAAeZ,EACzD4F,IACN,IACI3B,O,oCAIC3F,EAAMuC,EAASgF,GAAc,IAAD,OACxC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMnD,EAAG,UAAMvE,EAAN,YAAcuC,EAAd,YAAyBgF,GAE5BI,EAAW,EAAKlC,gBAAgBlB,GAClCoD,EACFF,EAAQE,GAKV,EAAKC,eAAe5H,GAAMkH,MAAK,WAC7B,IAAMxF,EAAK,EAAK+D,gBAAgBlB,QACzBsD,IAAPnG,EACE+F,EAAQ/F,GACRgG,EAAO,IAAII,MAAJ,mBAAsBvD,EAAtB,wB,uFAKe/D,G,sFAE1BR,EAGEQ,EAHFR,KACA+H,EAEEvH,EAFFuH,aACAC,EACExH,EADFwH,W,SAGMjB,E,UAASlI,KAAK0G,W,oCAAsCvF,EAAK4F,c,YAAiBmC,E,2BAA+BC,G,SAC1FhB,IAClBC,IAAIF,G,cADDkB,E,yBAECA,EAAOtC,M,uCAEduC,QAAQC,MAAM,qCAAsC3H,EAApD,M,kBACO,M,0JAQP,IAHF4H,EAGC,EAHDA,UACAC,EAEC,EAFDA,SACAN,EACC,EADDA,aAEMhB,EAAG,UACPlI,KAAK0G,WADE,mCAEkB6C,EAFlB,qBAEwCC,EAFxC,qBAE6DN,GACtE,OAAOf,IAAMC,IAAIF,GAAKG,MAAK,SAAAC,GACzB,OAAOA,EAAIxB,Y,MC1JJ2C,EAAb,YACE,WAAYpI,GAAQ,IAAD,sBACjB,4CAAMA,IADW,IAGTF,EAASE,EAAMG,MAAMG,OAArBR,KAHS,OAIjB,EAAKvB,MAAQ,CACXqF,WAAW,EACXC,IAAK,GACL/D,QAPe,EADrB,iFAYuB,IAAD,OAClBnB,KAAKC,SAAS,CAAEgF,WAAW,IAE3BiB,EAAa6C,eAAe/I,KAAKJ,MAAMuB,MAAMkH,MAAK,SAAAC,GAChD,EAAKrI,SAAS,CAAEgF,WAAW,EAAOC,IAAKoD,SAhB7C,+BAoBY,IAAD,EAC0BtI,KAAKJ,MAA9BuB,EADD,EACCA,KAAM8D,EADP,EACOA,UAAWC,EADlB,EACkBA,IAEzB,OACE,kBAAC,IAAD,CAAMR,SAAO,EAAC7C,MAAM,WAClB,kBAAC,IAAD,CAAYlB,UAAU,4BAAtB,iBACgB,0BAAMsF,GAAG,YAAY9E,IAErC,kBAAC,IAAD,KACE,kBAAC,IAAD,uFAGA,kBAAC,EAAD,CAAe8D,UAAWA,EAAWC,IAAKA,EAAK/D,KAAMA,UAhC/D,GAA2CsB,a,iBCOrCiH,G,MAAU,CACd,MAAO,MACP,OAAQ,UAGGC,EAAb,2MACE/J,MAAQ,CACNgK,SAAU,OAFd,EA0DEC,mBAAqB,SAAAC,GACnB,EAAK7J,SAAS,CACZ2J,SAAUE,IAEZ,EAAKzI,MAAM0I,mCAAmCL,EAAQI,KA9D1D,wEAKY,IAAD,OACCE,EAA2BhK,KAAKqB,MAAhC2I,uBACFC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACTC,EAAWC,OAAOC,KAAKX,GAASjE,KAAI,SAAAqE,GACxC,OACE,kBAAC,IAAD,CACEpE,IAAKoE,EACL/H,KAAK,IACLhB,OAAQ+I,IAAW,EAAKlK,MAAMgK,SAC9BnJ,QAAS,kBAAM,EAAKoJ,mBAAmBC,KAEtCA,MAKDQ,EAAQL,EAAUC,EAClBK,EAAkBN,EAAUK,EAAS,IACrCE,EAAkBN,EAAUI,EAAS,IAE3C,OACE,yBAAK3J,UAAU,IACb,kBAAC,IAAD,CAAKA,UAAU,iCACb,0BAAMA,UAAU,mDAAhB,WAGCwJ,GAEH,6BACE,kBAAC,IAAD,CAAUM,OAAO,EAAM9J,UAAU,sCAC/B,kBAAC,IAAD,CAAU+J,KAAK,EAAM7I,MAAM,UAAU0B,MAAOgH,IAC5C,kBAAC,IAAD,CAAUG,KAAK,EAAM7I,MAAM,SAAS0B,MAAOiH,KAE7C,0BAAM7J,UAAU,oBAAoB2J,GALtC,gBAOA,yBAAK3J,UAAU,iCACb,yBAAKA,UAAU,gEACb,wBAAIA,UAAU,QACZ,kBAAC,IAAD,CAAOkB,MAAM,WAAWoI,IAE1B,0CAEF,yBAAKtJ,UAAU,mDACb,wBAAIA,UAAU,QACZ,kBAAC,IAAD,CAAOkB,MAAM,UAAUqI,IAEzB,8CAnDZ,GAAwCS,IAAMlI,WCZxCmI,EAAwB,SAAC,GAA4E,IAA1EC,EAAyE,EAAzEA,SAAUC,EAA+D,EAA/DA,WAAYC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,OAAQrK,EAA+B,EAA/BA,UAAWsK,EAAoB,EAApBA,cACpF,OACE,kBAAC,IAAD,CAAMtK,UAAS,qBAAgBA,IAC7B,kBAAC,IAAD,CACEK,IAAI,KACJL,UAAU,uEAEV,8BACIoK,EACAD,GAEFE,GAEJ,kBAAC,IAAD,CAAUrK,UAAWsK,GACjBJ,KAMJK,EAAkB,SAACvG,GACvB,OAAIA,GAAQ,IAAMA,GAAQ,EACjBA,EAGF,GAAKA,GAmDdiG,EAAsBO,SAhDL,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACpBC,EAAeD,EAYnB,YAVcrC,IAAVqC,IACFC,EAAe,CACbC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAKN,6BACIP,EAAK3F,KAAI,YAAoC,IAAjCnF,EAAgC,EAAhCA,MAAOiD,EAAyB,EAAzBA,MAAOqI,EAAkB,EAAlBA,YAAkB,EACbN,EAAvBC,EADoC,EACpCA,GAAIC,EADgC,EAChCA,GAAIC,EAD4B,EAC5BA,GAAIC,EADwB,EACxBA,GAAIC,EADoB,EACpBA,GAExB,OACE,kBAAC,IAAD,CAAKE,WAAS,EAACnG,IAAKpF,EAAOK,UAAU,QACnC,kBAAC,IAAD,CAAK4K,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAIhL,UAAU,WACnDL,GAEJ,kBAAC,IAAD,CACEiL,GAAIL,EAAgBK,GACpBC,GAAIN,EAAgBM,GACpBC,GAAIP,EAAgBO,GACpBC,GAAIR,EAAgBQ,GACpBC,GAAIT,EAAgBS,GACpBhL,UAAU,WAEe,oBAAhBiL,EAA6BA,IAAgBrI,SA6BpEqH,EAAsBkB,aAAe,CACnCd,OAAQ,MC9EV,IAAMe,EAAuB,SAAAhE,GAC3B,IACMiE,EADkBjE,EAAMkE,MAAM,KAAK,GACXA,MAAM,KAEpC,OAAqB,IAAjBD,EAAM/I,OAEN,uBACElB,KAAI,mCAA8BiK,EAAM,GAApC,YAA0CA,EAAM,GAAhD,SACJE,OAAO,UAENnE,GAIEA,GAILoE,EAAwB,SAAC,GAMxB,IALLpC,EAKI,EALJA,mCACAlH,EAII,EAJJA,GACAmH,EAGI,EAHJA,uBACAoC,EAEI,EAFJA,qBACAC,EACI,EADJA,yBAEAhD,QAAQiD,IAAI,qBAAsBtC,GAClC,IAAMtJ,EAAE,UAAMmC,EAAGY,UAAT,yBAAmCZ,EAAGwB,SAAtC,YACNxB,EAAGa,QADG,sBAEMb,EAAGyB,QACXiI,EAAI,UAAM1J,EAAGwB,SAAT,YAAqBxB,EAAGa,SAE5B8I,EAAa,CACjB,CACElM,MAAO,QACPsL,YAFF,WAGI,OACE,yBAAKjL,UAAU,4BACb,6BAAMkC,EAAGY,WACT,yBAAK9C,UAAU,WACb,kBAAC,IAAD,CACE+D,SAAO,EACPC,KAAK,KACL8H,MAAM,qBACNhM,QAAS4L,GAET,kBAAC,IAAD,CAAiB7L,KAAMkM,WAOnC,CACEpM,MAAO,SACPiD,MAAOwI,EAAqBlJ,EAAGkF,QAEjC,CACEzH,MAAO,YACPsL,YAFF,WAGI,OACE,uBAAG7J,KAAMc,EAAGgB,SAAUqI,OAAO,UAC1BrJ,EAAGgB,YAKZ,CACEvD,MAAO,YACPsL,YAFF,WAGI,OAAO,kBAAC,EAAD,CAAkB/I,GAAIA,EAAIlC,UAAU,QAK3CgM,EAAU,CACd,CACErM,MAAO,cACPsL,YAFF,WAGI,OACE,uBAAG7J,KAAI,6BAAwBwK,GAAQL,OAAO,UAC3CK,KAKT,CACEjM,MAAO,OACPsL,YAFF,WAGI,OACE,uBAAG7J,KAAI,UAAKc,EAAGoB,WAAR,mBAA6BpB,EAAGyB,QAAU4H,OAAO,UACrDrJ,EAAGyB,UAKZ,CACEhE,MAAO,eACPiD,MAAOV,EAAGiB,gBAIR8I,EAAa,kBAAC,IAAD,CAAiBpM,KAAK,cAAcG,UAAU,SAC3DkM,EACJ,8BACE,kBAAC,IAAD,CAAiBrM,KAAK,cAAcG,UAAU,SAC7CkC,EAAGe,YACF,kBAAC,IAAD,CAAiBpD,KAAMsE,IAAcnE,UAAU,UAI/CmM,EACJ,kBAAC,IAAD,CACEtM,KAAK,OACLG,UAAU,4DAGRoM,EACJ,kBAAC,IAAD,CAAQrI,SAAO,EAAC7C,MAAM,YAAY8C,KAAK,KAAK3D,IAAK+D,IAAMrE,GAAIA,GACzD,kBAAC,IAAD,CAAiBF,KAAK,cAAcG,UAAU,SAC9C,6CAGEqM,EACJ,kBAAC,IAAD,CAAQtI,SAAO,EAAC7C,MAAM,YAAY8C,KAAK,KAAKlE,QAAS2L,GACnD,kBAAC,IAAD,CAAiB5L,KAAMyM,IAAStM,UAAU,SAC1C,4CAIJ,OACE,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,yBACb,kBAAC,EAAD,CACEmK,WAAW,aACXC,WAAY6B,EACZ5B,OAAQ+B,GAER,kBAAC,EAAsB5B,SAAvB,CAAgCC,KAAMoB,MAG1C,yBAAK7L,UAAU,yBACb,kBAAC,EAAD,CACEmK,WAAW,MACXC,WAAY8B,EACZ7B,OAAQgC,GAER,kBAAC,EAAsB7B,SAAvB,CACEC,KAAMuB,EACNtB,MAAO,CAAEE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,OAIhD,yBAAKhL,UAAU,YACb,kBAAC,EAAD,CACEmK,WAAW,cACXC,WAAY+B,GAEX9C,EACC,kBAAC,EAAD,CACEA,uBAAwBA,EACxBD,mCACEA,IAIJ,yBAAKpJ,UAAU,0DACb,kBAAC,IAAD,CAAiBH,KAAK,UAAU+E,MAAI,SCvK5C2H,EAAa,uDAEbC,EAAO,uBAAmBD,EAAnB,cADK,2BACL,KAEPE,E,YAKJ,aAAe,IAAD,8BACZ,+CALFxN,MAAQ,CACNyN,OAAO,GAMP,EAAKC,gBAAkB,EAAKA,gBAAgBvN,KAArB,gBACvB,EAAKwN,WAAa,EAAKA,WAAWxN,KAAhB,gBAJN,E,6EAOE6E,GAAI,IAAD,OACjBA,EAAE4I,iBAEFxN,KAAKyN,MAAMC,SAEXC,SAASC,YAAY,QAErB5N,KAAKC,SAAS,CACZoN,OAAO,IACN,WACDQ,YAAW,WACT,EAAK5N,SAAS,CACZoN,OAAO,MAER,W,mCAKLrN,KAAKC,SAAS,CAAEc,QAAQ,M,+BAGhB,IAAD,OACP,OACE,kBAAC,IAAD,CAAOmB,OAAQlC,KAAKqB,MAAMzB,MAAOE,OAAQE,KAAKqB,MAAMkM,WAAY5M,UAAWX,KAAKqB,MAAMV,WACpF,kBAAC,IAAD,CAAab,OAAQE,KAAKqB,MAAMkM,YAAhC,aAGA,kBAAC,IAAD,KACE,0IAGA,2BACE,uBAAGxL,KAhDG,4BAiDJ,yBAAKE,IAAKiL,EAAYlL,IAAI,qCAG9B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE8L,UAAQ,EACRC,SAAU,SAACC,GACT,EAAKP,MAAQO,GAEfC,KAAK,OACLZ,MAAOrN,KAAKJ,MAAMyN,MAClB9J,MAAO4J,IAET,kBAAC,IAAD,CAAiBe,UAAU,UACzB,kBAAC,IAAD,CAAQzN,QAAST,KAAKsN,gBAAiB3M,UAAU,kBAC/C,sCACA,kBAAC,IAAD,CAAiBA,UAAU,OAAOH,KAAM2N,QAG5C,kBAAC,IAAD,CAAcd,OAAK,EAACe,SAAO,GAA3B,uB,GAlEc3L,aCJtB4L,E,YAKJ,aAAe,IAAD,8BACZ,+CALFzO,MAAQ,CACNyN,OAAO,GAMP,EAAKC,gBAAkB,EAAKA,gBAAgBvN,KAArB,gBACvB,EAAKwN,WAAa,EAAKA,WAAWxN,KAAhB,gBAJN,E,6EAOE6E,GAAI,IAAD,OACjBA,EAAE4I,iBAEFxN,KAAKyN,MAAMC,SAEXC,SAASC,YAAY,QAErB5N,KAAKC,SAAS,CACZoN,OAAO,IACN,WACDQ,YAAW,WACT,EAAK5N,SAAS,CACZoN,OAAO,MAER,W,mCAKLrN,KAAKC,SAAS,CAAEc,QAAQ,M,+BAGhB,IAAD,SACgCf,KAAKqB,MAAMwB,GAA1CY,EADD,EACCA,UAAWsE,EADZ,EACYA,MAAO1D,EADnB,EACmBA,SACpBiK,EAAI,0CACiBjK,EADjB,YAC6BZ,EAD7B,qCAEWY,EAFX,YAEuBZ,EAFvB,kHAUVA,EAVU,+CAYAsE,EAZA,+BAkBV,OACE,kBAAC,IAAD,CAAO7F,OAAQlC,KAAKqB,MAAMzB,MAAOE,OAAQE,KAAKqB,MAAMkM,WAAY5M,UAAWX,KAAKqB,MAAMV,WACpF,kBAAC,IAAD,CAAab,OAAQE,KAAKqB,MAAMkM,YAAhC,aACY,6CAEZ,kBAAC,IAAD,KACE,iEACqC,4CADrC,2DAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK1B,WAAS,EAAClL,UAAU,mBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmN,UAAQ,EACRnN,UAAU,iBACVoN,SAAU,SAACC,GACT,EAAKP,MAAQO,GAEfC,KAAK,WACLZ,MAAOrN,KAAKJ,MAAMyN,MAClB9J,MAAO+K,EACPC,OAAO,KACPC,KAAK,MAEP,kBAAC,IAAD,CAAcnB,OAAK,EAACe,SAAO,GAA3B,wBAIF,kBAAC,IAAD,CAAKzN,UAAU,8BACb,kBAAC,IAAD,CAAQF,QAAST,KAAKsN,gBAAiB3M,UAAU,uBAC/C,sCACA,kBAAC,IAAD,CAAiBA,UAAU,OAAOH,KAAM2N,gB,GArF7B1L,aAgG7B4L,EAAevC,aAAe,CAC5BjJ,GAAI,ICtGC,IAAM4L,EAAb,YACE,WAAYpN,GAAQ,IAAD,uBACjB,4CAAMA,KAsBR0I,mCAAqC,SAAAZ,GAAe,IAAD,EAClB,EAAKvJ,MAA5BuB,EADyC,EACzCA,KAAM+H,EADmC,EACnCA,aAEdhD,EACGwI,wBAAwB,CACvBvN,OACA+H,eACAC,eAEDd,MAAK,SAAAC,GACJ,EAAKrI,SAAS,CAAE+J,uBAAwB1B,QAjC3B,IAETkB,EAAamF,IAAYC,MAAMvN,EAAME,SAASsN,QAA9CrF,SAFS,EAGcnI,EAAMG,MAAMG,OAAnCR,EAHS,EAGTA,KAAM+H,EAHG,EAGHA,aAHG,OAKjB,EAAKkD,qBAAuB,EAAKA,qBAAqBrM,KAA1B,gBAC5B,EAAK+O,sBAAwB,EAAKA,sBAAsB/O,KAA3B,gBAE7B,EAAKsM,yBAA2B,EAAKA,yBAAyBtM,KAA9B,gBAChC,EAAKgP,0BAA4B,EAAKA,0BAA0BhP,KAA/B,gBAEjC,EAAKH,MAAQ,CACXqF,WAAW,EACXpC,GAAI,KACJmH,uBAAwB,KACxB7I,OACAqI,WACAN,eACA8F,gBAAgB,EAChBC,oBAAoB,GAnBL,EADrB,iFAsCuB,IAAD,SACuBjP,KAAKJ,MAAtCuB,EADU,EACVA,KAAMqI,EADI,EACJA,SAAUN,EADN,EACMA,aAExBlJ,KAAKC,SAAS,CAAEgF,WAAW,IAE3BiB,EAAagJ,cAAc/N,EAAMqI,EAAUN,GAAcb,MAAK,SAAAC,GAC5D,EAAKrI,SAAS,CAAEgF,WAAW,EAAOpC,GAAIyF,OAGxCtI,KAAK+J,mCAAmC,SA/C5C,6CAmDI/J,KAAKC,SAAS,CAAE+O,gBAAgB,MAnDpC,8CAuDIhP,KAAKC,SAAS,CAAE+O,gBAAgB,MAvDpC,iDA2DIhP,KAAKC,SAAS,CAAEgP,oBAAoB,MA3DxC,kDA+DIjP,KAAKC,SAAS,CAAEgP,oBAAoB,MA/DxC,+BAkEY,IAAD,EAC2CjP,KAAKJ,MAA/CqF,EADD,EACCA,UAAWpC,EADZ,EACYA,GAAImH,EADhB,EACgBA,uBACnBmF,EACF,kBAAC,EAAD,CACEtM,GAAIA,EACJkH,mCACE/J,KAAK+J,mCAEPC,uBAAwBA,EACxBoC,qBAAsBpM,KAAKoM,qBAC3BC,yBAA0BrM,KAAKqM,2BAYnC,OARIpH,IACFkK,EACE,yBAAK9J,MAAO,CAAEC,UAAW,WACvB,kBAAC,IAAD,CAAiB9E,KAAK,UAAU+E,MAAI,IAAI,MAM5C,kBAAC,IAAD,CAAMb,SAAO,EAAC7C,MAAM,WAClB,kBAAC,IAAD,CAAYlB,UAAU,8EACpB,mDAEF,kBAAC,IAAD,KAAWwO,GACX,kBAAC,EAAD,CACEvP,MAAOI,KAAKJ,MAAMoP,eAClBzB,WAAYvN,KAAK8O,wBAEnB,kBAAC,EAAD,CACEjM,GAAIA,GAAM,GACVjD,MAAOI,KAAKJ,MAAMqP,mBAClB1B,WAAYvN,KAAK+O,iCArG3B,GAAwCtM,a,iBCClC2M,G,YAAe,SAACC,GACpBA,EAAOC,aAAaD,EAAOE,aAAaC,aACxCH,EAAOI,oBAGIC,GAAb,YACE,WAAYrO,GAAQ,IAAD,sBACjB,4CAAMA,IADW,MAEesN,IAAYC,MAAMvN,EAAME,SAASsN,QAAzDtF,EAFS,EAETA,UAAWC,EAFF,EAEEA,SACXN,EAAiB7H,EAAMG,MAAMG,OAA7BuH,aAHS,OAKjB,EAAKtJ,MAAQ,CACXqF,WAAW,EACXqH,IAAK,GACL/C,YACAC,WACAN,gBAVe,EADrB,iFAeuB,IAAD,SAC4BlJ,KAAKJ,MAA3C2J,EADU,EACVA,UAAWC,EADD,EACCA,SAAUN,EADX,EACWA,aAE7BlJ,KAAKC,SAAS,CAAEgF,WAAW,IAE3BiB,EAAayJ,iBAAiB,CAAEpG,YAAWC,WAAUN,iBAAgBb,MAAK,SAAAC,GACxE,EAAKrI,SAAS,CAAEgF,WAAW,EAAOqH,IAAKhE,SArB7C,+BAyBY,IAAD,EAOHtI,KAAKJ,MALP2J,EAFK,EAELA,UACAC,EAHK,EAGLA,SACAN,EAJK,EAILA,aACAoD,EALK,EAKLA,IACArH,EANK,EAMLA,UAGI2K,EAAgB,CACpB5J,MAAO,OACP6J,OAAQ,QACRC,KAAM,KACNC,MAAO,UACPjC,UAAU,EACVkC,OAAQZ,EACRa,aAAa,EACbC,iBAAiB,EACjBC,YAAa,CACXC,iBAAiB,IAIjBjB,EAAY,kBAAC,IAAD,iBAAeS,EAAf,CAA8BrM,MAAO+I,KAUrD,OARkB,IAAdrH,IACFkK,EACE,yBAAK9J,MAAO,CAAEC,UAAW,WACvB,kBAAC,IAAD,CAAiB9E,KAAK,UAAU+E,MAAI,IAAI,MAM5C,kBAAC,IAAD,CAAMb,SAAO,EAAC7C,MAAM,WAClB,kBAAC,IAAD,CAAYlB,UAAU,4BAAtB,mBACmBuI,EADnB,MACoCK,EADpC,OACmDC,EADnD,KAGA,kBAAC,IAAD,KACI2F,QAhEZ,GAAqC1M,aCdxB4N,GAAe,kBAAM,gDCG5BC,G,YACJ,WAAYjP,GAAQ,IAAD,sBAGjB,IAAI2K,GAFJ,4CAAM3K,KAEWkP,YACflP,EAAME,SAASH,SACfC,EAAME,SAASsN,QALA,OAQjB,EAAKjP,MAAQ,CACXoM,SATe,E,yEAaP5K,GAAwB,IAAdyN,EAAa,uDAAJ,GACzB7C,EAAQ5K,EACTuG,QAAQ,MAAO,IACfsE,MAAM,KACNuE,MAAM,GAET,OAAOxE,EAAMxD,QAAO,SAACiI,EAAKC,EAAGC,GAC3B,IAAIC,EAEFA,EADQ,IAAND,EACa,GAEAF,EAAIA,EAAIxN,OAAS,GAAG5C,KAGrC,IAAMwQ,EAAIlC,IAAYC,MAAMC,GACxBiC,EAAK,GAQT,OAPU,IAANH,IAIFG,EAAE,oBAAgBD,EAAErH,WAEtBiH,EAAI7K,KAAK,CAAE8B,KAAMgJ,EAAGrQ,KAAK,GAAD,OAAKuQ,EAAL,YAAqBF,GAArB,OAAyBI,KAC1CL,IACN,M,0CAGgB,IAAD,OAClBzQ,KAAK+Q,SAAW/Q,KAAKqB,MAAMC,QAAQ0P,QAAO,SAAAzP,GACxC,IAAIyK,EAAQ,EAAKuE,YAAYhP,EAASH,SAAUG,EAASsN,QACzD,EAAK5O,SAAS,CACZ+L,e,6CAMJhM,KAAK+Q,a,+BAGG,IACA/E,EAAUhM,KAAKJ,MAAfoM,MAEFiF,EAAQjF,EAAMvG,KAAI,WAAiBkL,GAAO,IAArBtQ,EAAoB,EAApBA,KAAMqH,EAAc,EAAdA,KACzBwJ,EAAY,GACdC,EACF,kBAACC,EAAA,EAAD,CAAS1Q,GAAIL,GACTqH,GAUN,OANIiJ,IAAM3E,EAAM/I,OAAS,IACvBiO,EAAUnQ,QAAS,EAEnBoQ,EAAczJ,GAId,kBAAC,IAAD,eAAgBhC,IAAG,UAAKgC,GAAL,OAAYiJ,IAASO,GACpCC,MAKR,OACE,kBAAC,IAAD,CAAYE,cAAc,0CACtBJ,O,GAhF0BxO,aAsF9B6O,GAAc3O,YAAW2N,ICxFzBiB,GAAS,kBACb,kBAAC,IAAD,CAAW5Q,UAAU,gBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,mBACa,uBAAGoB,KAAK,4BAAR,gBCONyP,I,YAAb,iLAGI,IAAMC,EACoCvR,OAAOyG,UAEjD,OACE,kBAAC+K,EAAA,EAAD,CAAeD,SAAUA,GACvB,yBAAK9Q,UAAU,aACb,kBAAC+B,EAAD,MACA,kBAAC4O,GAAD,MACA,6BACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAO1Q,OAAK,EAACb,KAAK,SAASwR,UAAWpI,IACtC,kBAACmI,EAAA,EAAD,CACE1Q,OAAK,EACLb,KAAK,uBACLwR,UAAWpD,IAEb,kBAACmD,EAAA,EAAD,CACEvR,KAAK,2BACLwR,UAAWnC,KAEb,kBAACkC,EAAA,EAAD,CAAOC,UAAWxB,OAGtB,kBAAC,GAAD,YA1BV,GAAyB5N,c,MCGzBqP,EAAQC,IACNC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGFC,IAASC,OAAO,kBAAC,GAAD,MAAS9E,SAAS+E,eAAe,W","file":"static/js/main.a152d954.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink as NavLinkRouter, withRouter, matchPath } from 'react-router-dom';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Collapse,\n} from 'reactstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass NavBarWithRouter extends Component {\n  state = {\n    isActive: false,\n  };\n\n  toggle() {\n    this.setState({\n      isActive: !this.state.isActive,\n    })\n  }\n\n  toggle = this.toggle.bind(this);\n\n  isLoggedIn() {\n    return window.SIGNED_IN === 'true'\n  }\n\n  createNavLink(currentPath, path, label, additionalClassName, icon = null, onClick = () => {}) {\n    if (!path) {\n      return null;\n    }\n\n    const to = `/${path}`;\n\n    const className = [\n      'py-3',\n      'px-3',\n      'px-md-2',\n      additionalClassName,\n    ].filter(item => item).join(' ');\n\n    return (\n      <NavItem active={currentPath === to}>\n        <NavLink className={className} tag={NavLinkRouter} to={to} exact onClick={onClick}>\n          { icon }\n          { label }\n        </NavLink>\n      </NavItem>\n    );\n  }\n\n  render() {\n    const { pathname } = this.props.history.location;\n    const match = matchPath(pathname, {\n      path: '/:user',\n      strict: false,\n    });\n    let user;\n    if (match && match.params) {\n      user = match.params.user;\n    }\n\n    return (\n      <Navbar\n        dark\n        color=\"openfaas\"\n        expand=\"md\"\n        className={[\n          'background-openfaas-important',\n          'border-radius-bottom-5',\n          'navbar-inverse',\n          'p-0',\n          'overflow-hidden',\n        ].join(' ')}\n      >\n        <NavbarBrand href=\"/\" className=\"font-size-0-important margin-0-important p-0 pl-2\">\n          <img\n            alt=\"OpenFaaS\"\n            src=\"https://docs.openfaas.com/images/logo.svg\"\n          />\n        </NavbarBrand>\n        <a\n          href=\"https://docs.openfaas.com/openfaas-cloud/intro\"\n          className=\"color-white py-3 px-2\"\n        >\n          OpenFaaS Cloud\n        </a>\n        <NavbarToggler className=\"mr-2\" onClick={this.toggle} />\n        <Collapse isOpen={this.state.isActive} navbar>\n          <Nav navbar>\n            { this.createNavLink(pathname, user, 'Home') }\n            <NavItem>\n              <NavLink\n                className=\"py-3 px-3 px-md-2\"\n                href=\"https://github.com/openfaas/openfaas-cloud\"\n              >\n                <FontAwesomeIcon icon={faGithub} className=\"mr-1\" />\n                GitHub\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <Nav navbar className=\"ml-auto\">\n            { this.isLoggedIn() && this.createNavLink(\n                pathname,\n                'logout',\n                'Logout',\n                '',\n                <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-1\" />,\n                this.forceUpdate,\n            ) }\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst NavBar = withRouter(NavBarWithRouter);\n\nexport { NavBar };\n","import React from 'react';\nimport { Progress } from 'reactstrap';\n\nconst ReplicasProgress = ({ fn }) => {\n  const { replicas, maxReplicas } = fn;\n\n  const upperReplicas = maxReplicas && maxReplicas.length && parseInt(maxReplicas, 10) ? maxReplicas : 20;\n  const percentage = Math.floor((replicas / upperReplicas) * 100);\n\n  let status = null;\n\n  if (percentage < 66) {\n    status = 'success';\n  } else if (66 <= percentage && percentage < 90) {\n    status = 'warning';\n  } else {\n    status = 'danger';\n  }\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Progress color={status} value={percentage} className=\"flex-grow-1\"/>\n      <div className=\"flex-grow-0 flex-shrink-1 pl-2\">\n        { replicas }/{ upperReplicas }\n      </div>\n    </div>\n  );\n};\n\nexport {\n  ReplicasProgress\n};\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserSecret } from \"@fortawesome/free-solid-svg-icons\";\nimport { ReplicasProgress } from \"../ReplicasProgress\";\n\nconst genLogPath = ({ shortName, gitOwner, gitRepo, gitSha }, user) => (\n  `${user}/${shortName}/log?repoPath=${gitOwner}/${gitRepo}&commitSHA=${gitSha}`\n);\n\nconst genFnDetailPath = ({ shortName, gitOwner, gitRepo }, user) => (\n  `/${user}/${shortName}?repoPath=${gitOwner}/${gitRepo}`\n);\n\nconst genRepoUrl = ({ gitRepoURL, gitBranch }) => {\n  if(gitBranch === \"\") {\n    return `${gitRepoURL}/commits/master`\n  }\n  return `${gitRepoURL}/commits/${gitBranch}`\n};\n\nconst FunctionTableItem = ({ onClick, fn, user }) => {\n  const {\n    shortName,\n    gitRepo,\n    shortSha,\n    gitPrivate,\n    endpoint,\n    sinceDuration,\n    invocationCount,\n  } = fn;\n\n  const repoUrl = genRepoUrl(fn);\n  const logPath = genLogPath(fn, user);\n  const fnDetailPath = genFnDetailPath(fn, user);\n\n  const handleClick = () => onClick(fnDetailPath);\n\n  return (\n    <tr onClick={handleClick} className=\"cursor-pointer\">\n      <td>{shortName}</td>\n      <td>\n        <Button\n          outline\n          size=\"xs\"\n          href={endpoint}\n          onClick={e => e.stopPropagation()}\n        >\n          <FontAwesomeIcon icon=\"link\" />\n        </Button>\n      </td>\n      <td>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <a href={repoUrl} onClick={e => e.stopPropagation()}>\n            { gitRepo }\n          </a>\n          { gitPrivate && <FontAwesomeIcon icon={faUserSecret} /> }\n        </div>\n      </td>\n      <td>\n        { shortSha }\n      </td>\n      <td>\n        { sinceDuration }\n      </td>\n      <td>\n        { invocationCount }\n      </td>\n      <td>\n        <ReplicasProgress fn={fn} />\n      </td>\n      <td>\n        <Button\n          outline\n          size=\"xs\"\n          to={logPath}\n          onClick={e => e.stopPropagation()}\n          tag={Link}\n        >\n          <FontAwesomeIcon icon=\"folder-open\" />\n        </Button>\n      </td>\n    </tr>\n  )\n};\n\nexport {\n  FunctionTableItem\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Table } from 'reactstrap';\n\nimport { withRouter } from 'react-router-dom';\n\nimport { FunctionTableItem } from '../FunctionTableItem';\n\nimport './FunctionTable.css'\n\nfunction renderBody(fns, user, clickHandler) {\n  if (fns.length === 0) {\n    return (\n      <tr>\n        <td>No functions available.</td>\n      </tr>\n    );\n  } else {\n    return fns.map((fn) => {\n      return (\n        <FunctionTableItem key={fn.shortSha} fn={fn} user={user} onClick={clickHandler} />\n      );\n    });\n  }\n}\n\nconst FunctionTable = withRouter(({ isLoading, fns, user, history }) => {\n  const onRowClick = to => history.push(to);\n  const tbody = isLoading ? (\n    <tr>\n      <td colSpan=\"8\" style={{ textAlign: 'center' }}>\n        <FontAwesomeIcon icon=\"spinner\" spin />\n      </td>\n    </tr>\n  ) : (\n    renderBody(fns, user, onRowClick)\n  );\n\n  let tableProps = {\n    responsive: true,\n    className: 'function-table',\n  };\n\n  if (fns && fns.length > 0) {\n    tableProps.hover = true;\n  }\n\n  return (\n    <Table {...tableProps}>\n      <thead>\n      <tr>\n        <th>Name</th>\n        <th style={{ width: '42px' }} />\n        <th>Repository</th>\n        <th>SHA</th>\n        <th>Deployed</th>\n        <th>Invocations</th>\n        <th>Replicas</th>\n        <th />\n      </tr>\n      </thead>\n      <tbody id=\"items\">\n        { tbody }\n      </tbody>\n    </Table>\n  );\n});\n\nFunctionTable.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  fns: PropTypes.array.isRequired,\n  user: PropTypes.string.isRequired,\n};\n\nexport { FunctionTable };\n","import axios from 'axios';\nimport moment from 'moment';\n\nconst getRepoURL = annotations => annotations['com.openfaas.cloud.git-repo-url'] || '';\n\nclass FunctionsApi {\n  constructor() {\n    this.selectedRepo = '';\n    this.prettyDomain = window.PRETTY_URL;\n    this.queryPrettyUrl = window.QUERY_PRETTY_URL === 'true';\n\n    if (process.env.NODE_ENV === 'production') {\n      this.baseURL = window.PUBLIC_URL;\n      this.apiBaseUrl = `${window.BASE_HREF}api`;\n    } else {\n      this.baseURL = 'http://127.0.0.1:8080';\n      this.apiBaseUrl = '/api';\n    }\n\n    this.cachedFunctions = {};\n  }\n\n  parseFunctionResponse({\n    data\n  }, userName) {\n    const user = userName.toLowerCase();\n\n    data.sort((a, b) => {\n      if (\n        !a ||\n        !b ||\n        (!a.labels['com.openfaas.cloud.git-deploytime'] || !b.labels['com.openfaas.cloud.git-deploytime'])\n      ) {\n        return 0;\n      }\n      return (\n        parseInt(b.labels['com.openfaas.cloud.git-deploytime'], 10) -\n        parseInt(a.labels['com.openfaas.cloud.git-deploytime'], 10)\n      );\n    });\n\n    const userPrefixRegex = new RegExp(`^${user}-`);\n\n    return data.map(item => {\n      const since = new Date(\n        parseInt(item.labels['com.openfaas.cloud.git-deploytime'], 10) * 1000\n      );\n      const sinceDuration = moment(since).fromNow();\n\n      const shortName = item.name.replace(userPrefixRegex, '');\n\n      let endpoint;\n\n      if (this.queryPrettyUrl) {\n        endpoint = this.prettyDomain\n          .replace('user', user)\n          .replace('function', shortName);\n      } else {\n        endpoint = this.baseURL + '/function/' + item.name;\n      }\n\n      let shortSha = item.labels['com.openfaas.cloud.git-sha'];\n      if (shortSha) {\n        shortSha = shortSha.substr(0, 7);\n      } else {\n        shortSha = 'unknown';\n      }\n\n      let isPrivate = false;\n\n      if (\n        item.labels['com.openfaas.cloud.git-private'] &&\n        item.labels['com.openfaas.cloud.git-private'] === '1'\n      ) {\n        isPrivate = true;\n      }\n\n      return {\n        name: item.name,\n        image: item.image,\n        shortName,\n        endpoint,\n        shortSha,\n        sinceDuration,\n        invocationCount: item.invocationCount,\n        replicas: item.replicas,\n        gitRepo: item.labels['com.openfaas.cloud.git-repo'],\n        gitOwner: item.labels['com.openfaas.cloud.git-owner'],\n        gitDeployTime: item.labels['com.openfaas.cloud.git-deploytime'],\n        gitPrivate: isPrivate,\n        gitSha: item.labels['com.openfaas.cloud.git-sha'],\n        gitBranch: item.labels['com.openfaas.cloud.git-branch'],\n        gitRepoURL: getRepoURL(item.annotations || {}),\n        minReplicas: item.labels['com.openfaas.scale.min'],\n        maxReplicas: item.labels['com.openfaas.scale.max'],\n      };\n    });\n  }\n\n  fetchFunctions(user) {\n    const url = `${this.apiBaseUrl}/list-functions?user=${user}`;\n    return axios\n      .get(url)\n      .then(res => this.parseFunctionResponse(res, user))\n      .then(data => {\n        this.cachedFunctions = data.reduce((cache, fn) => {\n          cache[`${user}/${fn.gitOwner}/${fn.gitRepo}/${fn.shortName}`] = fn;\n          return cache;\n        }, {});\n        return data;\n      });\n  }\n\n  fetchFunction(user, gitRepo, fnShortname) {\n    return new Promise((resolve, reject) => {\n      const key = `${user}/${gitRepo}/${fnShortname}`;\n\n      const cachedFn = this.cachedFunctions[key];\n      if (cachedFn) {\n        resolve(cachedFn);\n        return;\n      }\n\n      // fetch functions if cache not found\n      this.fetchFunctions(user).then(() => {\n        const fn = this.cachedFunctions[key];\n        fn !== undefined ?\n          resolve(fn) :\n          reject(new Error(`Function ${key} not found`));\n      });\n    });\n  }\n\n  async fetchFunctionInvocation(params) {\n    const {\n      user,\n      functionName,\n      timePeriod\n    } = params;\n    try {\n      const url = `${this.apiBaseUrl}/system-metrics?function=${user.toLowerCase()}-${functionName}&metrics_window=${timePeriod}`;\n      const result = await axios\n        .get(url);\n      return result.data;\n    } catch (error) {\n      console.error('Error fetching function invocation', params, error);\n      return null;\n    }\n  }\n\n  fetchFunctionLog({\n    commitSHA,\n    repoPath,\n    functionName\n  }) {\n    const url = `${\n      this.apiBaseUrl\n    }/pipeline-log?commitSHA=${commitSHA}&repoPath=${repoPath}&function=${functionName}`;\n    return axios.get(url).then(res => {\n      return res.data;\n    });\n  }\n}\n\nexport const functionsApi = new FunctionsApi();","import React, { Component } from 'react';\nimport { FunctionTable } from '../components/FunctionTable';\nimport { functionsApi } from '../api/functionsApi';\nimport { Card, CardHeader, CardBody, CardText } from 'reactstrap';\n\nexport class FunctionsOverviewPage extends Component {\n  constructor(props) {\n    super(props);\n\n    const { user } = props.match.params;\n    this.state = {\n      isLoading: true,\n      fns: [],\n      user,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    functionsApi.fetchFunctions(this.state.user).then(res => {\n      this.setState({ isLoading: false, fns: res });\n    });\n  }\n\n  render() {\n    const { user, isLoading, fns } = this.state;\n\n    return (\n      <Card outline color=\"success\">\n        <CardHeader className=\"bg-success color-success\">\n          Functions for <span id=\"username\">{user}</span>\n        </CardHeader>\n        <CardBody>\n          <CardText>\n            Welcome to the OpenFaaS Cloud Dashboard! Click on a function for more details.\n          </CardText>\n          <FunctionTable isLoading={isLoading} fns={fns} user={user} />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Badge,\n  ListGroup,\n  ListGroupItem,\n  Nav,\n  NavLink,\n  Progress\n} from 'reactstrap';\n\nimport './FunctionInvocation.css';\n\nconst OPTIONS = {\n  '1hr': '60m',\n  '24hr': '1440m'\n};\n\nexport class FunctionInvocation extends React.Component {\n  state = {\n    selected: '1hr'\n  };\n\n  render() {\n    const { functionInvocationData } = this.props;\n    let { success, failure } = functionInvocationData;\n    const navLinks = Object.keys(OPTIONS).map(option => {\n      return (\n        <NavLink\n          key={option}\n          href=\"#\"\n          active={option === this.state.selected}\n          onClick={() => this.navLinkClickHandle(option)}\n        >\n          {option}\n        </NavLink>\n      );\n    });\n\n    const total = success + failure;\n    const successPercent = (success / total) * 100;\n    const failurePercent = (failure / total) * 100;\n\n    return (\n      <div className=\"\">\n        <Nav className=\"d-flex justify-content-center\">\n          <span className=\"d-flex align-items-center mr-4 font-weight-bold\">\n            Period:\n          </span>\n          {navLinks}\n        </Nav>\n        <div>\n          <Progress multi={true} className=\"mt-3 d-flex justify-content-center\">\n            <Progress bar={true} color=\"success\" value={successPercent} />\n            <Progress bar={true} color=\"danger\" value={failurePercent} />\n          </Progress>\n          <span className=\"font-weight-bold\">{total}</span> invocations\n        </div>\n        <div className=\"mt-3 mx-1 row flex-row border\">\n          <div className=\"d-flex col-6 flex-column align-items-center border-right p-2\">\n            <h5 className=\"mt-1\">\n              <Badge color=\"success\">{success}</Badge>\n            </h5>\n            <span>Success</span>\n          </div>\n          <div className=\"d-flex col-6 flex-column align-items-center p-2\">\n            <h5 className=\"mt-1\">\n              <Badge color=\"danger\">{failure}</Badge>\n            </h5>\n            <span>Error</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  navLinkClickHandle = option => {\n    this.setState({\n      selected: option\n    });\n    this.props.changeFunctionInvocationTimePeriod(OPTIONS[option]);\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\n\nconst FunctionOverviewPanel = ({ children, headerText, headerIcon, button, className, bodyClassName }) => {\n  return (\n    <Card className={`height-100 ${className}`}>\n      <CardHeader\n        tag=\"h6\"\n        className=\"flex align-items-center justify-content-space-between min-height-49\"\n      >\n        <span>\n          { headerIcon }\n          { headerText }\n        </span>\n        { button }\n      </CardHeader>\n      <CardBody className={bodyClassName}>\n        { children }\n      </CardBody>\n    </Card>\n  );\n};\n\nconst getOppositeSize = (size) => {\n  if (size >= 12 || size <= 0) {\n    return size;\n  }\n\n  return 12 - size;\n};\n\nconst MetaList = ({ list, sizes }) => {\n  let currentSizes = sizes;\n\n  if (sizes === undefined) {\n    currentSizes = {\n      xs: 12,\n      sm: 3,\n      md: 2,\n      lg: 4,\n      xl: 3,\n    }\n  }\n\n  return (\n    <div>\n      { list.map(({ label, value, renderValue }) => {\n        const { xs, sm, md, lg, xl } = currentSizes;\n\n        return (\n          <Row noGutters key={label} className=\"py-1\">\n            <Col xs={xs} sm={sm} md={md} lg={lg} xl={xl} className=\"is-bold\">\n              { label }\n            </Col>\n            <Col\n              xs={getOppositeSize(xs)}\n              sm={getOppositeSize(sm)}\n              md={getOppositeSize(md)}\n              lg={getOppositeSize(lg)}\n              xl={getOppositeSize(xl)}\n              className=\"pl-xl-2\"\n            >\n              { typeof renderValue === 'function' ? renderValue() : value }\n            </Col>\n          </Row>\n        )\n      })}\n    </div>\n  )\n};\n\nMetaList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    renderValue: PropTypes.func,\n  })),\n};\n\nFunctionOverviewPanel.MetaList = MetaList;\n\nFunctionOverviewPanel.propTypes = {\n  header: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n  ]),\n  headerText: PropTypes.string,\n  headerIcon: PropTypes.element,\n  button: PropTypes.element,\n};\n\nFunctionOverviewPanel.defaultProps = {\n  button: null,\n};\n\nexport {\n  FunctionOverviewPanel\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAward,\n  faCloudDownloadAlt,\n  faUserSecret\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { FunctionInvocation } from '../FunctionInvocation';\nimport { FunctionOverviewPanel } from '../FunctionOverviewPanel';\nimport { ReplicasProgress } from '../ReplicasProgress';\n\nimport { Button } from 'reactstrap';\n\nconst renderContainerImage = image => {\n  const imageWithoutTag = image.split(':')[0];\n  const parts = imageWithoutTag.split('/');\n\n  if (parts.length === 2) {\n    return (\n      <a\n        href={`https://hub.docker.com/r/${parts[0]}/${parts[1]}/tags`}\n        target=\"_blank\"\n      >\n        {image}\n      </a>\n    );\n  } else {\n    return image;\n  }\n};\n\nconst FunctionDetailSummary = ({\n  changeFunctionInvocationTimePeriod,\n  fn,\n  functionInvocationData,\n  handleShowBadgeModal,\n  handleShowRunOnMyOFModal\n}) => {\n  console.log('functionInvocation', functionInvocationData);\n  const to = `${fn.shortName}/log?repoPath=${fn.gitOwner}/${\n    fn.gitRepo\n  }&commitSHA=${fn.gitSha}`;\n  const repo = `${fn.gitOwner}/${fn.gitRepo}`;\n\n  const deployMeta = [\n    {\n      label: 'Name:',\n      renderValue() {\n        return (\n          <div className=\"d-flex align-items-start\">\n            <div>{fn.shortName}</div>\n            <div className=\"ml-auto\">\n              <Button\n                outline\n                size=\"xs\"\n                title=\"Run on my OpenFaaS\"\n                onClick={handleShowRunOnMyOFModal}\n              >\n                <FontAwesomeIcon icon={faCloudDownloadAlt} />\n              </Button>\n            </div>\n          </div>\n        );\n      }\n    },\n    {\n      label: 'Image:',\n      value: renderContainerImage(fn.image)\n    },\n    {\n      label: 'Endpoint:',\n      renderValue() {\n        return (\n          <a href={fn.endpoint} target=\"_blank\">\n            {fn.endpoint}\n          </a>\n        );\n      }\n    },\n    {\n      label: 'Replicas:',\n      renderValue() {\n        return <ReplicasProgress fn={fn} className=\"\" />;\n      }\n    }\n  ];\n\n  const gitMeta = [\n    {\n      label: 'Repository:',\n      renderValue() {\n        return (\n          <a href={`https://github.com/${repo}`} target=\"_blank\">\n            {repo}\n          </a>\n        );\n      }\n    },\n    {\n      label: 'SHA:',\n      renderValue() {\n        return (\n          <a href={`${fn.gitRepoURL}/commit/${fn.gitSha}`} target=\"_blank\">\n            {fn.gitSha}\n          </a>\n        );\n      }\n    },\n    {\n      label: 'Deploy Time:',\n      value: fn.sinceDuration\n    }\n  ];\n\n  const deployIcon = <FontAwesomeIcon icon=\"info-circle\" className=\"mr-3\" />;\n  const gitIcon = (\n    <span>\n      <FontAwesomeIcon icon=\"code-branch\" className=\"mr-3\" />\n      {fn.gitPrivate && (\n        <FontAwesomeIcon icon={faUserSecret} className=\"mr-3\" />\n      )}\n    </span>\n  );\n  const invocationsIcon = (\n    <FontAwesomeIcon\n      icon=\"bolt\"\n      className=\"mr-3 mr-lg-2 d-inline-block d-lg-none d-xl-inline-block\"\n    />\n  );\n  const deployButton = (\n    <Button outline color=\"secondary\" size=\"xs\" tag={Link} to={to}>\n      <FontAwesomeIcon icon=\"folder-open\" className=\"mr-2\" />\n      <span>Build Logs</span>\n    </Button>\n  );\n  const gitButton = (\n    <Button outline color=\"secondary\" size=\"xs\" onClick={handleShowBadgeModal}>\n      <FontAwesomeIcon icon={faAward} className=\"mr-2\" />\n      <span>Get Badge</span>\n    </Button>\n  );\n\n  return (\n    <div className=\"FunctionDetailSummary fn-detail-summary row\">\n      <div className=\"col-lg-4 pb-3 pb-lg-0\">\n        <FunctionOverviewPanel\n          headerText=\"Deployment\"\n          headerIcon={deployIcon}\n          button={deployButton}\n        >\n          <FunctionOverviewPanel.MetaList list={deployMeta} />\n        </FunctionOverviewPanel>\n      </div>\n      <div className=\"col-lg-4 pb-3 pb-lg-0\">\n        <FunctionOverviewPanel\n          headerText=\"Git\"\n          headerIcon={gitIcon}\n          button={gitButton}\n        >\n          <FunctionOverviewPanel.MetaList\n            list={gitMeta}\n            sizes={{ xs: 12, sm: 3, md: 2, lg: 5, xl: 4 }}\n          />\n        </FunctionOverviewPanel>\n      </div>\n      <div className=\"col-lg-4\">\n        <FunctionOverviewPanel\n          headerText=\"Invocations\"\n          headerIcon={invocationsIcon}\n        >\n          {functionInvocationData ? (\n            <FunctionInvocation\n              functionInvocationData={functionInvocationData}\n              changeFunctionInvocationTimePeriod={\n                changeFunctionInvocationTimePeriod\n              }\n            />\n          ) : (\n            <div className=\"h-100 d-flex justify-content-center align-items-center\">\n              <FontAwesomeIcon icon=\"spinner\" spin />\n            </div>\n          )}\n        </FunctionOverviewPanel>\n      </div>\n    </div>\n  );\n};\n\nFunctionDetailSummary.propTypes = {\n  fn: PropTypes.object.isRequired,\n  handleShowBadgeModal: PropTypes.func.isRequired\n};\n\nexport { FunctionDetailSummary };\n","import React, { Component } from 'react';\nimport {\n  Modal,\n  ModalBody,\n  ModalHeader,\n  FormFeedback,\n  Form,\n  Input,\n  InputGroup,\n  Button,\n  InputGroupAddon,\n} from 'reactstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\n\nconst badgeImage = \"https://img.shields.io/badge/openfaas-cloud-blue.svg\";\nconst badgeLink = \"https://www.openfaas.com\";\nconst badgeMd = `[![OpenFaaS](${badgeImage})](${badgeLink})`;\n\nclass GetBadgeModal extends Component {\n  state = {\n    valid: false,\n  };\n\n  constructor() {\n    super();\n\n    this.handleCopyClick = this.handleCopyClick.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  handleCopyClick(e) {\n    e.preventDefault();\n\n    this.input.select();\n\n    document.execCommand('copy');\n\n    this.setState({\n      valid: true,\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          valid: false,\n        })\n      }, 1500)\n    })\n  };\n\n  closeModal() {\n    this.setState({ active: false });\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.state} toggle={this.props.closeModal} className={this.props.className}>\n        <ModalHeader toggle={this.props.closeModal}>\n          Get Badge\n        </ModalHeader>\n        <ModalBody>\n          <p>\n            Add the following markdown snippet to your README.md in your Git repo to show you are using OpenFaaS Cloud.\n          </p>\n          <p>\n            <a href={badgeLink}>\n              <img src={badgeImage} alt=\"Powered by OpenFaaS &reg; Cloud\" />\n            </a>\n          </p>\n          <Form>\n            <InputGroup>\n              <Input\n                readOnly\n                innerRef={(node) => {\n                  this.input = node;\n                }}\n                type=\"text\"\n                valid={this.state.valid}\n                value={badgeMd}\n              />\n              <InputGroupAddon addonType=\"append\">\n                <Button onClick={this.handleCopyClick} className=\"radius-right-5\">\n                  <span>Copy</span>\n                  <FontAwesomeIcon className=\"ml-2\" icon={faCopy} />\n                </Button>\n              </InputGroupAddon>\n              <FormFeedback valid tooltip>\n                Link copied\n              </FormFeedback>\n            </InputGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nexport {\n  GetBadgeModal\n};\n","import React, { Component } from 'react';\nimport {\n  Modal,\n  ModalBody,\n  ModalHeader,\n  FormFeedback,\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n} from 'reactstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\n\nclass ModalRunOnMyOF extends Component {\n  state = {\n    valid: false,\n  };\n\n  constructor() {\n    super();\n\n    this.handleCopyClick = this.handleCopyClick.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  handleCopyClick(e) {\n    e.preventDefault();\n\n    this.input.select();\n\n    document.execCommand('copy');\n\n    this.setState({\n      valid: true,\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          valid: false,\n        })\n      }, 1500)\n    })\n  };\n\n  closeModal() {\n    this.setState({ active: false });\n  }\n\n  render() {\n    const { shortName, image, gitOwner } = this.props.fn;\n    const code = `{\nmkdir -p /tmp/openfaas-cloud/${gitOwner}/${shortName}/\ncd /tmp/openfaas-cloud/${gitOwner}/${shortName}/\n\ncat > stack.yml <<EOF\nprovider:\n  name: faas\n  gateway: http://127.0.0.1:8080\n\nfunctions:\n  ${shortName}:\n    skip_build: true\n    image: ${ image }\nEOF\n\nfaas-cli deploy\n}`;\n\n    return (\n      <Modal isOpen={this.props.state} toggle={this.props.closeModal} className={this.props.className}>\n        <ModalHeader toggle={this.props.closeModal}>\n          Run on my <strong>OpenFaaS</strong>\n        </ModalHeader>\n        <ModalBody>\n          <p>\n            To run this function on your local <strong>OpenFaaS</strong> cluster copy and paste the below into a bash terminal.\n          </p>\n          <Form>\n            <Row noGutters className=\"align-items-end\">\n              <Col>\n                <Input\n                  readOnly\n                  className=\"text-monospace\"\n                  innerRef={(node) => {\n                    this.input = node;\n                  }}\n                  type=\"textarea\"\n                  valid={this.state.valid}\n                  value={code}\n                  bsSize=\"sm\"\n                  rows=\"8\"\n                />\n                <FormFeedback valid tooltip>\n                  Copied to clipboard\n                </FormFeedback>\n              </Col>\n              <Col className=\"col-auto position-relative\">\n                <Button onClick={this.handleCopyClick} className=\"radius-right-5 ml-2\">\n                  <span>Copy</span>\n                  <FontAwesomeIcon className=\"ml-2\" icon={faCopy} />\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nModalRunOnMyOF.defaultProps = {\n  fn: {},\n};\n\nexport {\n  ModalRunOnMyOF\n};\n","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\n\nimport { functionsApi } from '../api/functionsApi';\nimport { FunctionDetailSummary } from '../components/FunctionDetailSummary';\nimport { GetBadgeModal } from '../components/GetBadgeModal';\nimport { ModalRunOnMyOF } from '../components/ModalRunOnMyOF';\n\nexport class FunctionDetailPage extends Component {\n  constructor(props) {\n    super(props);\n    const { repoPath } = queryString.parse(props.location.search);\n    const { user, functionName } = props.match.params;\n\n    this.handleShowBadgeModal = this.handleShowBadgeModal.bind(this);\n    this.handleCloseBadgeModal = this.handleCloseBadgeModal.bind(this);\n\n    this.handleShowRunOnMyOFModal = this.handleShowRunOnMyOFModal.bind(this);\n    this.handleCloseRunOnMyOFModal = this.handleCloseRunOnMyOFModal.bind(this);\n\n    this.state = {\n      isLoading: true,\n      fn: null,\n      functionInvocationData: null,\n      user,\n      repoPath,\n      functionName,\n      showBadgeModal: false,\n      showRunOnMyOFModal: false\n    };\n  }\n\n  changeFunctionInvocationTimePeriod = timePeriod => {\n    const { user, functionName } = this.state;\n\n    functionsApi\n      .fetchFunctionInvocation({\n        user,\n        functionName,\n        timePeriod\n      })\n      .then(res => {\n        this.setState({ functionInvocationData: res });\n      });\n  };\n\n  componentDidMount() {\n    const { user, repoPath, functionName } = this.state;\n\n    this.setState({ isLoading: true });\n\n    functionsApi.fetchFunction(user, repoPath, functionName).then(res => {\n      this.setState({ isLoading: false, fn: res });\n    });\n\n    this.changeFunctionInvocationTimePeriod('60m');\n  }\n\n  handleShowBadgeModal() {\n    this.setState({ showBadgeModal: true });\n  }\n\n  handleCloseBadgeModal() {\n    this.setState({ showBadgeModal: false });\n  }\n\n  handleShowRunOnMyOFModal() {\n    this.setState({ showRunOnMyOFModal: true });\n  }\n\n  handleCloseRunOnMyOFModal() {\n    this.setState({ showRunOnMyOFModal: false });\n  }\n\n  render() {\n    const { isLoading, fn, functionInvocationData } = this.state;\n    let panelBody = (\n      <FunctionDetailSummary\n        fn={fn}\n        changeFunctionInvocationTimePeriod={\n          this.changeFunctionInvocationTimePeriod\n        }\n        functionInvocationData={functionInvocationData}\n        handleShowBadgeModal={this.handleShowBadgeModal}\n        handleShowRunOnMyOFModal={this.handleShowRunOnMyOFModal}\n      />\n    );\n\n    if (isLoading) {\n      panelBody = (\n        <div style={{ textAlign: 'center' }}>\n          <FontAwesomeIcon icon=\"spinner\" spin />{' '}\n        </div>\n      );\n    }\n\n    return (\n      <Card outline color=\"success\">\n        <CardHeader className=\"bg-success color-success d-flex align-items-center justify-content-between\">\n          <div>Function Overview</div>\n        </CardHeader>\n        <CardBody>{panelBody}</CardBody>\n        <GetBadgeModal\n          state={this.state.showBadgeModal}\n          closeModal={this.handleCloseBadgeModal}\n        />\n        <ModalRunOnMyOF\n          fn={fn || {}}\n          state={this.state.showRunOnMyOFModal}\n          closeModal={this.handleCloseRunOnMyOFModal}\n        />\n      </Card>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport AceEditor from 'react-ace';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\n\nimport 'brace/mode/sh';\nimport 'brace/theme/monokai';\n\nimport { functionsApi } from '../api/functionsApi';\n\nconst onEditorLoad = (editor) => {\n  editor.scrollToLine(editor.getSession().getLength());\n  editor.navigateLineEnd();\n};\n\nexport class FunctionLogPage extends Component {\n  constructor(props) {\n    super(props);\n    const { commitSHA, repoPath } = queryString.parse(props.location.search);\n    const { functionName } = props.match.params;\n\n    this.state = {\n      isLoading: true,\n      log: '',\n      commitSHA,\n      repoPath,\n      functionName,\n    };\n  }\n\n  componentDidMount() {\n    const { commitSHA, repoPath, functionName } = this.state;\n\n    this.setState({ isLoading: true });\n\n    functionsApi.fetchFunctionLog({ commitSHA, repoPath, functionName }).then(res => {\n      this.setState({ isLoading: false, log: res });\n    });\n  }\n\n  render() {\n    const {\n      commitSHA,\n      repoPath,\n      functionName,\n      log,\n      isLoading,\n    } = this.state;\n\n    const editorOptions = {\n      width: '100%',\n      height: '600px',\n      mode: 'sh',\n      theme: 'monokai',\n      readOnly: true,\n      onLoad: onEditorLoad,\n      wrapEnabled: true,\n      showPrintMargin: false,\n      editorProps: {\n        $blockScrolling: true,\n      },\n    };\n\n    let panelBody = <AceEditor {...editorOptions} value={log} />;\n\n    if (isLoading === true) {\n      panelBody = (\n        <div style={{ textAlign: 'center' }}>\n          <FontAwesomeIcon icon=\"spinner\" spin />{' '}\n        </div>\n      );\n    }\n\n    return (\n      <Card outline color=\"success\">\n        <CardHeader className=\"bg-success color-success\">\n          Build logs from {functionName} @ {commitSHA} - ({repoPath})\n        </CardHeader>\n        <CardBody>\n          { panelBody }\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\n\nexport const NotFoundPage = () => <div>Page Not Found</div>;\n","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\n\nclass BreadcrumbsWithRouter extends Component {\n  constructor(props) {\n    super(props);\n\n    let parts = this.pathToParts(\n      props.location.pathname,\n      props.location.search\n    );\n\n    this.state = {\n      parts,\n    };\n  }\n\n  pathToParts(pathname, search = '') {\n    let parts = pathname\n      .replace(/\\/$/, '')\n      .split('/')\n      .slice(1);\n      \n    return parts.reduce((acc, p, i) => {\n      let previousPath;\n      if (i === 0) {\n        previousPath = '';\n      } else {\n        previousPath = acc[acc.length - 1].path;\n      }\n\n      const q = queryString.parse(search);\n      let qs = '';\n      if (i === 1) {\n        // The function detail part needs a query param for the repoPath\n        // Currently the second part of the url is always the function name\n        // so we can always add the repoPath query\n        qs = `?repoPath=${q.repoPath}`;\n      }\n      acc.push({ name: p, path: `${previousPath}/${p}${qs}` });\n      return acc;\n    }, []);\n  }\n\n  componentDidMount() {\n    this.unlisten = this.props.history.listen(location => {\n      let parts = this.pathToParts(location.pathname, location.search);\n      this.setState({\n        parts,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    const { parts } = this.state;\n\n    const links = parts.map(({ path, name }, i) => {\n      const itemProps = {};\n      let itemContent = (\n        <NavLink to={path}>\n          { name }\n        </NavLink>\n      );\n\n      if (i === parts.length - 1) {\n        itemProps.active = true;\n\n        itemContent = name;\n      }\n\n      return (\n        <BreadcrumbItem key={`${name}${i}`} {...itemProps}>\n          { itemContent }\n        </BreadcrumbItem>\n      );\n    });\n\n    return (\n      <Breadcrumb listClassName=\"background-color-inherit-important m-0\">\n        { links }\n      </Breadcrumb>\n    );\n  }\n}\n\nconst Breadcrumbs = withRouter(BreadcrumbsWithRouter);\n\nexport { Breadcrumbs };\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Footer = () => (\n  <Container className=\"padding-12-0\">\n    <Row>\n      <Col>\n        Powered by <a href=\"https://www.openfaas.com\">OpenFaaS</a>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport {\n  Footer\n};\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { NavBar } from './components/NavBar';\nimport { FunctionsOverviewPage } from './pages/FunctionsOverviewPage';\nimport { FunctionDetailPage } from './pages/FunctionDetailPage';\nimport { FunctionLogPage } from './pages/FunctionLogPage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Breadcrumbs } from './components/Breadcrumbs';\nimport { Footer } from './components/Footer';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nexport class App extends Component {\n  render() {\n    // basename is injected from the server\n    const basename =\n      process.env.NODE_ENV === 'production' ? window.BASE_HREF : '/';\n\n    return (\n      <BrowserRouter basename={basename}>\n        <div className=\"container\">\n          <NavBar />\n          <Breadcrumbs />\n          <div>\n            <Switch>\n              <Route exact path=\"/:user\" component={FunctionsOverviewPage} />\n              <Route\n                exact\n                path=\"/:user/:functionName\"\n                component={FunctionDetailPage}\n              />\n              <Route\n                path=\"/:user/:functionName/log\"\n                component={FunctionLogPage}\n              />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n          <Footer />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faFolderOpen,\n  faLink,\n  faSpinner,\n  faInfoCircle,\n  faCodeBranch,\n  faBolt,\n  faCubes,\n  faPlusSquare,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faFolderOpen,\n  faLink,\n  faSpinner,\n  faInfoCircle,\n  faCodeBranch,\n  faBolt,\n  faCubes,\n  faPlusSquare\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}